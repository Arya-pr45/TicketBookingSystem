@using TicketBookingWebApp.Domain.Enums
@model TicketBookingWebApp.Common.Pagination.PagedResult<TicketBookingWebApp.Application.DTOs.EventDto>
<partial name="_Notification" />

@{
    ViewData["Title"] = "Events";
    var userName = User.Identity?.IsAuthenticated == true ? User.Identity.Name : "Guest";
    var eventTypes = Enum.GetValues(typeof(EventType)).Cast<EventType>();
    string currentFilter = ViewBag.CurrentFilter as string;
    int? selectedType = null;
    if (!string.IsNullOrEmpty(ViewBag.Filters?.EventType))
    {
        int parsedType;
        if (int.TryParse(ViewBag.Filters.EventType, out parsedType))
        {
            selectedType = parsedType;
        }
    }

}

<div class="text-center mb-5">
    <h2 class="fw-bold text-danger">Welcome, @userName!</h2>
    <p class="lead text-muted mb-4 fw-semibold">Explore, filter, and book top events happening near you!</p>
</div>

<div class="row">
    <div class="col-lg-3">
        <form method="get" asp-action="Index" class="bg-light p-4 rounded shadow-sm mb-4">
            <h5 class="mb-3">🎯 Filter Events</h5>

            <div class="mb-3">
                <label class="form-label">🔍 Search</label>
                <input type="text" name="Keyword" value="@ViewBag.Filters?.Keyword" class="form-control" placeholder="Search by name or venue..." />
            </div>

            <div class="mb-3">
                <label class="form-label">🎭 Event Type</label>
                <select name="EventType" class="form-select">
                    <option value="">All</option>
                    @foreach (EventType type in Enum.GetValues(typeof(EventType)))
                    {
                        var typeValue = (int)type;
                        <option value="@typeValue" selected="@(selectedType == typeValue)">@type</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">📅 Date Range</label>
                <input type="date" name="FromDate" class="form-control mb-2" value="@((ViewBag.Filters?.FromDate as DateTime?)?.ToString("yyyy-MM-dd"))" />
                <input type="date" name="ToDate" class="form-control" value="@((ViewBag.Filters?.ToDate as DateTime?)?.ToString("yyyy-MM-dd"))" />
            </div>

            <div class="mb-3">
                <label class="form-label">💰 Price Range</label>
                <div class="d-flex gap-2">
                    <input type="number" name="MinPrice" placeholder="Min"
                           class="form-control"
                           value="@ViewBag.Filters?.MinPrice"
                           min="0" step="1" />

                    <input type="number" name="MaxPrice" placeholder="Max"
                           class="form-control"
                           value="@ViewBag.Filters?.MaxPrice"
                           min="0" step="1" />
                </div>
            </div>


            <div class="form-check mb-3">
                <input type="checkbox" name="OnlyAvailable" class="form-check-input" value="true" @(ViewBag.Filters?.OnlyAvailable == true ? "checked" : null) />
                <label class="form-check-label">🎟️ Only Available</label>
            </div>

            <div class="mb-3">
                <label class="form-label">⬇️ Sort By</label>
                <select name="SortBy" class="form-select">
                    <option value="">Default</option>
                    <option value="price" selected="@(ViewBag.Filters?.SortBy == "price")">Price</option>
                    <option value="date" selected="@(ViewBag.Filters?.SortBy == "date")">Date</option>
                </select>
            </div>

            <button type="submit" class="btn btn-danger w-100 fw-semibold">Apply Filters</button>
        </form>
    </div>

    <div class="col-lg-9">
        @if (Model.Items != null && Model.Items.Any())
        {
            <div id="eventContainer" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                @foreach (var ev in Model.Items)
                {
                    <div class="col">
                        <div class="card border-0 shadow-lg h-100 rounded-4 overflow-hidden">
                            @if (!string.IsNullOrEmpty(ev.ImageUrl))
                            {
                                <img src="@ev.ImageUrl" class="card-img-top img-fluid" alt="@ev.Title" style="height: 200px; object-fit: cover;" />
                            }
                            else
                            {
                                <div class="bg-secondary text-white d-flex align-items-center justify-content-center" style="height: 200px;">
                                    No Image Available
                                </div>
                            }

                            <div class="card-body d-flex flex-column p-4">
                                <h5 class="card-title fw-bold text-primary">@ev.Title</h5>
                                <p class="text-muted small">
                                    <i class="bi bi-calendar-event"></i> @ev.EventDateTime.ToString("dd MMM yyyy hh:mm tt")
                                </p>

                                <div class="badge bg-light border mb-3 text-dark">
                                    @(ev.IsSeatBased ? "🎫 Seat-Based" : "🚪 General Admission")
                                </div>

                                <div class="mt-auto">
                                    <a asp-action="Details" asp-route-id="@ev.Id" class="btn btn-outline-danger w-100 rounded-pill fw-semibold">View Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <nav class="mt-4 d-flex justify-content-center">
                <ul class="pagination">
                    @if (Model.PageNumber > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Math.Ceiling((double)Model.TotalCount / Model.PageSize); i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }

                    @if (Model.PageNumber < Math.Ceiling((double)Model.TotalCount / Model.PageSize))
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
        else
        {
            <div class="alert alert-warning text-center mt-5 fs-5">
                No events found. Try adjusting your filters.
            </div>
        }
    </div>
</div>
